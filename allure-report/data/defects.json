{
  "defectsList" : [ {
    "title" : "Product defects",
    "status" : "FAILED",
    "defects" : [ {
      "uid" : "3266c44cb158a2b4",
      "failure" : {
        "message" : "AssertionError: assert [44:firstname...y:Elagin, ...] == [44:firstnameu...astname1, ...]\n  At index 4 diff: 55:firstname1:lastname1 != 54:Ivan:Taranov\n  Use -v to get the full diff",
        "stackTrace" : "app = <fixture.application.Application object at 0x03C13ED0>\ndb = <fixture.db.DbFixture object at 0x03C13B90>, check_ui = False\n\n    def test_edit_empty_name(app, db, check_ui):\n        with pytest.allure.step('Given a non-empty group list'):\n            old_contacts = db.get_contact_list()\n            contact = Contact(firstname=\"Ivan\", lastname=\"Taranov\")\n            if app.contact.count() == 0:\n                app.contact.create(Contact(firstname=\"\", lastname=\"\"))\n                app.contact.edit_first_contact(contact)\n                app.contact.delete_first_contact()\n                new_contacts = db.get_contact_list()\n                assert len(old_contacts) == len(new_contacts)\n            else:\n                random_contact = random.choice(old_contacts)\n                if app.contact.edit_empty_name_by_id(random_contact.id):\n                    app.open_home_page()\n                else:\n                    contact.id = random_contact.id\n                with pytest.allure.step('When I modify a contact with id=%s in the list' % contact.id):\n                    app.contact.edit_contact_by_id(random_contact.id, contact)\n                with pytest.allure.step('Then the new contact list is equal to the old list with the modified contact'):\n                    new_contacts = db.get_contact_list()\n                    assert len(old_contacts) == len(new_contacts)\n                    result = re.match('^[^:]*', str(random_contact))\n                    id = result.group(0)\n                    for i in range(len(old_contacts)):\n                        result_old_contacts = re.match('^[^:]*', str(old_contacts[i]))\n                        id_old_contacts = result_old_contacts.group(0)\n                        if int(id_old_contacts) == int(id):\n                            index_contact = i\n                    old_contacts[index_contact] = contact\n>                   assert sorted(old_contacts, key=Contact.id_or_max) == sorted(new_contacts, key=Contact.id_or_max)\nE                   assert [44:firstname...y:Elagin, ...] == [44:firstnameu...astname1, ...]\nE                     At index 4 diff: 55:firstname1:lastname1 != 54:Ivan:Taranov\nE                     Use -v to get the full diff\n\ntest\\test_edit_contact.py:72: AssertionError"
      },
      "testCases" : [ {
        "uid" : "3fa159c8d545f711",
        "name" : "test_edit_empty_name",
        "title" : "Test edit empty name",
        "time" : {
          "start" : 1494524886646,
          "stop" : 1494524888730,
          "duration" : 2084
        },
        "severity" : "NORMAL",
        "status" : "FAILED"
      } ]
    } ]
  }, {
    "title" : "Test defects",
    "status" : "BROKEN",
    "defects" : [ ]
  } ]
}